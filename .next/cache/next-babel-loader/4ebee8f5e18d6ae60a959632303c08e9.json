{"ast":null,"code":"var _jsxFileName = \"/Users/howardchen/Google Drive (r02943093@g.ntu.edu.tw)/03_learning/01_Web_Develope/01_Junior_To_Senior_Web_Developer/section8_ssr/next-ssr/pages/robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Robots = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Home\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, props.robots.map(robot => __jsx(\"li\", {\n    key: robot.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  })))));\n};\n\nRobots.getInitialProps = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await response.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["/Users/howardchen/Google Drive (r02943093@g.ntu.edu.tw)/03_learning/01_Web_Develope/01_Junior_To_Senior_Web_Developer/section8_ssr/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","getInitialProps","response","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAChB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CALF,CADF;AAcD,CAfD;;AAiBAL,MAAM,CAACM,eAAP,GAAyB,YAAY;AACnC,QAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC,4CAAD,CAA5B;AACA,QAAMS,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAO;AACLP,IAAAA,MAAM,EAAEM;AADH,GAAP;AAGD,CAND;;AAQA,eAAeR,MAAf","sourcesContent":["import Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Robots = (props) => {\n  return (\n    <div>\n      <h1>Robots</h1>\n      <Link href=\"/\">\n        <button>Home</button>\n      </Link>\n      <div>\n        {props.robots.map((robot) => (\n          <li key={robot.id}>\n            <Link ></Link></li>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nRobots.getInitialProps = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await response.json();\n  return {\n    robots: data,\n  };\n};\n\nexport default Robots;\n"]},"metadata":{},"sourceType":"module"}